EventBus是一个Android事件发布/订阅框架，通过解耦发布者和订阅者简化Android事件传递，事件也可以理解为消息
        即可用于四大组件之间通讯，也可以用户异步线程和主线程之间进行通信
传统事件传递包括：Handler, BroadCastReceiver, Interface回调，相比下来EventBus的优点是代码简洁，使用简单将事件发布和订阅完全解耦

事件： 可称为消息，其实就是一个对象，可以是网络请求回复的字符串，也可以是某个开关状态等等。事件类型指的是事件所属的Class
     事件可分为一般事件和Sticky事件，Sticky事件当事件发布后，再有订阅者开始订阅该类型事件，依然能收到该类型事件最近一个 Sticky 事件。
订阅者： 订阅某种事件类型的对象。当有发布者发布这类事件后，EventBus会执行订阅者的onEvent函数（事件响应函数）
        订阅者通过register接口订阅某个事件类型，unregister接口退订。
        订阅者存在优先级，优先级高的订阅者可以取消事件继续向优先级低的订阅者分发，默认所有订阅者优先级都为 0。
发布者： 发布某事件的对象，通过post接口发布事件。

subscribe函数分为三步:
  (1) 通过subscriptionsByEventType得到该事件类型所有订阅者信息队列，根据优先级将当前订阅者信息插入到订阅者队列subscriptionsByEventType中
  (2) 在typesBySubscriber中得到当前订阅者订阅的所有事件队列，将此事件保存到队列typesBySubscriber中用于后续取消订阅
  (3) 检查这个事件是否是sticky事件，如果是则从stickyEvents事件保存队列中取出该事件类型最后一个事件发送给当前订阅者。

post, cancel, removeStickyEvent
   post函数用于发布事件，cancel函数用于取消某订阅者订阅的所有事件类型，removeStickyEvent函数用于删除sticky事件
       会首先得到当前线程的post信息PostingThreadState,其中包含事件队列，将当前事件添加到其事件队列中，然后循环调用postSingleEvent发布队列中每个事件
       postSingleEvent会先去eventTypesCache得到该事件对应类型的父类和接口类型，没有缓存则查找并插入缓存